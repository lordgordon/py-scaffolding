[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "py-scaffolding"
version = "0.0.1"
dependencies = [
    "pydantic-settings~=2.9",
    "pydantic~=2.11",
    "structlog~=22.3",
]
requires-python = "~=3.11,<3.12"
authors = [
  { name = "Nicholas Fiorentini", email = "lordgordon@users.noreply.github.com" },
]
# maintainers = []
description = "Empty project"
readme = "README.md"
license = "MIT"
license-files = ["LICENSE"]
keywords = ["scaffolding-repo"]
classifiers = [
  # How mature is this project? Common values are
  #   3 - Alpha
  #   4 - Beta
  #   5 - Production/Stable
  "Development Status :: 5 - Production/Stable",

  # Indicate who your project is intended for
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Build Tools",
  "Typing :: Typed",

  # Specify the Python versions you support here.
  "Programming Language :: Python :: 3.11",
]

[dependency-groups]
dev = [
    "commitizen~=4.6",
    "coverage[toml]~=7.8",
    "doc8~=1.1",
    "Faker~=37.0",
    "hypothesis~=6.131",
    "ipdb~=0.13",
    "ipython~=9.0",
    "mypy~=1.15",
    "pip-audit~=2.9",
    "pip~=25.0",
    "pre-commit~=4.2",
    "pytest-bdd~=8.1",
    "pytest~=8.3",
    "ruff>=0.11.6",
    "Sphinx~=8.2",
]

[project.urls]
Homepage = "https://github.com/lordgordon/py-scaffolding"

[tool.commitizen]
version = "0.0.1"
version_files = [
    "src/py_scaffolding/__version__.py",
    "pyproject.toml:version"
]

[tool.pytest.ini_options]
minversion = "6.2"
python_files = "tests.py test_*.py *_tests.py"
norecursedirs = ".* *.egg venv"
junit_family = "xunit2"

[tool.coverage.run]
branch = true
omit=[
    "*/__main__.py",
    "*/docs/*",
    "*/virtualenvs/*",
    "*/venv/*"]

[tool.coverage.report]
exclude_lines =[
    "pragma: no cover",
    "if __name__ == .__main__.:"]
show_missing = true
skip_covered = false
sort = "Cover"
fail_under = 99

[tool.mypy]
python_version = "3.11"
plugins = ["pydantic.mypy"]

enable_error_code = [
  "truthy-bool",
]

check_untyped_defs = true
disallow_any_generics = false
disallow_any_explicit = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_subclassing_any = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
strict_optional = true
strict_equality = true
strict = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = true
show_error_codes = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.ruff]
line-length = 120
indent-width = 4
exclude = [".venv", "docs"]

[tool.ruff.analyze]
detect-string-imports = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
    "RUF",
    # Pylint
    "PL",
    # pyupgrade
    "UP",
    # isort
    "I",
    # code complexity
    "C90",
    # specific languages
    "NPY",
    "PD",
    # naming conventions
    "N",
    # various flake8 rules
    "A",
    "ANN",
    "ARG",
    "ASYNC",
    "B",
    "C4",
    "DTZ",
    "FBT",
    "G",
    "ICN",
    "LOG",
    "PIE",
    "PT",
    "PTH",
    "Q",
    "RET",
    "S",
    "SIM",
    "SIM",
    "T20",
    "TC",
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["S101"]
