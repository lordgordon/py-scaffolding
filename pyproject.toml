[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "py-scaffolding"
version = "0.0.1"
description = "Empty project"
license = "MIT License"
authors = [
  "Nicholas Fiorentini <lordgordon@users.noreply.github.com>",
]
homepage = "https://github.com/lordgordon/py-scaffolding"
# keywords = ["packaging", "poetry"]
# classifiers = [
#     "Topic :: Software Development :: Build Tools",
#     "Topic :: Software Development :: Libraries :: Python Modules"
# see https://pypi.org/classifiers/
# ]

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "1.10.13"
structlog = "22.3.0"

[tool.poetry.dev-dependencies]
bandit = "~1.7"
black = "~23"
commitizen = "~3"
coverage = {extras = ["toml"], version = "~7"}
doc8 = "~1.1"
Faker = "~22"
hypothesis = "~6"
ipdb = "~0.13"
ipython = "~8"
isort = "~5"
mypy = "1.8.0"
Sphinx = "~7"
pip-audit = "~2.6"
pylint = "~3"
pytest = "~7"
pytest-bdd = "~7"
pyupgrade = "~3.15"

[tool.black]
line-length = 90
target-version = ["py311"]

[tool.coverage.run]
branch = true
omit=[
    "*/__main__.py",
    "*/tests/*",
    "*/docs/*",
    "*/virtualenvs/*",
    "*/venv/*"]

[tool.coverage.report]
exclude_lines =[
    "pragma: no cover",
    "if __name__ == .__main__.:"]
show_missing = true
skip_covered = false
sort = "Cover"
fail_under = 99

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 90
atomic = true

[tool.pytest.ini_options]
minversion = "6.2"
python_files = "tests.py test_*.py *_tests.py"
norecursedirs = ".* *.egg venv"
junit_family = "xunit2"

[tool.pylint.messages_control]
disable = ''',
    invalid-name,
    too-many-arguments,
    too-many-instance-attributes,
    too-many-ancestors,
    too-few-public-methods,
    '''

[tool.pylint.options]
ignored-argument-names = "_.*|^ignored_|^unused_|args|kwargs"
min-public-methods = "1"
min-similarity-lines = "6"
max-line-length = "120"

[tool.commitizen]
version = "0.0.1"
version_files = [
    "src/__version__.py",
    "pyproject.toml:version"
]

[tool.mypy]
python_version = "3.11"
plugins = ["pydantic.mypy"]

enable_error_code = [
  "truthy-bool",
]

check_untyped_defs = true
disallow_any_generics = false
disallow_any_explicit = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_subclassing_any = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
strict_optional = true
strict_equality = true
strict = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = true
show_error_codes = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true
